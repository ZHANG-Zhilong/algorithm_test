#include <iostream>#include <vector>#include <random>#include <memory>using namespace std;class Code03_SnackWays{public:    //三种解决方法    //way：暴力递归解决    //way2：dp尝试，一个样本做行，一个样本做列，dp[i][j]表示 [0, i]位置自由选择，背包容量为j时的方法数量    //way3：同上，dp[i][i]表示[0,i]位置自由选择，指定承装容量为j时的方法数量    static int ways(const vector<int>& arr, int bag){        if(arr.empty() || bag<0){            return -1;        }        return process(arr, bag, 0);    }    static int ways2(const vector<int>& arr, int bag){        if(arr.empty() || bag<0){            return -1;        }        vector<vector<int>> dp (arr.size()+1, vector<int>(bag+1, 0));        for(int i = 0; i< dp[0].size(); i++){            dp.back()[i]=1;        }        for(ssize_t i = dp.size()-2; i>=0; i--){            for(int j = 0; j< dp[0].size(); j++){                dp[i][j] =dp[i+1][j]+(j-arr[i]>=0? dp[i+1][j-arr[i]]:0);            }        }        return dp[0].back();    }    static int ways3(const vector<int>& arr, int bag){        if(arr.empty() || bag<0){            return -1;        }        vector<vector<int>> dp (arr.size(), vector<int>(bag+1, 0));        for(int i = 0; i< arr.size(); i++){            dp[i][0]=1;        }        if(arr[0]<bag){            dp[0][arr[0]] = 1;        }        for(int i = 1; i< arr.size(); i++){            for(int j = 0; j< dp[0].size(); j++){                dp[i][j] = dp[i-1][j]+ (j-arr[i]>=0? dp[i-1][j-arr[i]]:0);            }        }        int ret = 0;        for(int j=0; j< dp[0].size(); j++){            ret+= dp.back()[j];        }        return ret;    }private:    static int process(const vector<int>& arr, int bag, int index){        if(index == arr.size() || bag == 0){            return 1;        }        int ways = 0;        if(bag-arr[index]>0){            ways += process(arr, bag-arr[index], index+1);        }        ways += process(arr, bag, index+1);        return ways;    }};void play() {    vector<int> arr{4,3,2,9};    int bag = 8;    cout<<Code03_SnackWays::ways(arr, bag)<<endl;    cout<<Code03_SnackWays::ways2(arr, bag)<<endl;    cout<<Code03_SnackWays::ways3(arr, bag)<<endl;}int main(int argc, char *argv[]) {    play();    return 0;}