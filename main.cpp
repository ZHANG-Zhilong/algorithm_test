#include <iostream>#include <vector>#include <random>#include <memory>using namespace std;class GetRandom {public:    static vector<int> getRandomArray(const int from, const int to, const int len) {        if (to < from || len < 1) {            return {};        }        random_device rd;        int range = to - from;        vector<int> ret(len, 0);        for (auto &n : ret) {            n = (double) rd() / rd.max() * range + from;        }        cout << endl;        return ret;    }    static vector<vector<int>> getRandomMatrix(const int M, const int N, const int from, const int to) {        if (M <= 1 || N <= 1 || from > to) {            cerr << "input error @ getRandomMatrix" << endl;            return {};        }        vector<vector<int>> matrix;        for (int i = 0; i < M; i++) {            matrix.push_back(getRandomArray(from, to, N));        }        return matrix;    }    static void printArr(const vector<int> arr) {        if (arr.empty()) {            return;        }        for (const auto &n : arr) {            cout << n << " ";        }        cout << endl;    }    static void printMatrix(const vector<vector<int>> &matrix) {        for (const auto &m : matrix) {            for (const auto &n : m) {                cout << n << " ";            }            cout << endl;        }        cout << endl;    }};void play() {}int main(int argc, char *argv[]) {    play();    return 0;}